/* Generated by the Nim Compiler v0.19.9 */
/*   (c) 2018 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI172074 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI40262 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI174327 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI62395 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62391 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62387 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62383 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62379 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62375 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62371 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62367 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62363 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62359 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62355 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62351 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62347 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62343 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62339 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62335 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62331 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62327 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62323 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62319 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62204 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62262 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62260 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI62218 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI62452 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI62450 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI62220 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI62448 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI62222 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62248 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62246 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI62499 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI62542 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI62254 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62252 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI36032 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI62216 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62214 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI62230 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62228 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI64057 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI40250 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40258 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI36006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI52541 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI40208 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40314 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI36016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI36040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI36042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI40308 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI40226 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40228 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40242 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40246 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI40246 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40246.node = NNI40246;
var NNI40242 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40242.node = NNI40242;
var NNI40228 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40228.node = NNI40228;
NTI40308.base = NTI40226;
NTI40314.base = NTI40226;
var NNI40226 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI40308, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI36042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI36040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI36040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI36016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI40314, name: "up", sons: null}]};
NTI40226.node = NNI40226;
var NNI40208 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40208.node = NNI40208;
NTI40226.base = NTI40208;
NTI40228.base = NTI40226;
NTI40242.base = NTI40228;
NTI40246.base = NTI40242;
var NNI52541 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36042, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}]};
NTI52541.node = NNI52541;
var NNI40258 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40258.node = NNI40258;
NTI40258.base = NTI40228;
var NNI40250 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40250.node = NNI40250;
NTI40250.base = NTI40228;
var NNI62216 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI62216.node = NNI62216;
NTI62216.base = NTI40208;
NTI62214.base = NTI62216;
NTI62542.base = NTI62228;
var NNI62254 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "action", len: 0, typ: NTI36042, name: "action", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI36042, name: "encoding", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI36042, name: "method", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI36042, name: "target", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI62542, name: "elements", sons: null}]};
NTI62254.node = NNI62254;
NTI62254.base = NTI62230;
NTI62252.base = NTI62254;
var NNI62248 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI36032, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI36032, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI36006, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI36042, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI36042, name: "value", sons: null}]};
NTI62248.node = NNI62248;
NTI62248.base = NTI62230;
NTI62246.base = NTI62248;
NTI62499.base = NTI62246;
var NNI62230 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "classList", len: 0, typ: NTI62214, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI36032, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI36032, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI36042, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI36032, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI62252, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI36042, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI36032, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI62499, name: "options", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI36006, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI36006, name: "clientHeight", sons: null}]};
NTI62230.node = NNI62230;
NTI62220.base = NTI62222;
NTI62448.base = NTI62220;
NTI62450.base = NTI62220;
NTI62452.base = NTI62220;
var NNI62218 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI62218, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI62218, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI62218, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI62218, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI62218, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI62218, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI62218, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI62218, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI62218, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI62218, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI62218, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI62218, name: "NotationNode", len: 0, sons: null}}};
NTI62218.node = NNI62218;
var NNI62262 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI36042, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI36042, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI36042, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI36042, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI36042, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI36042, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI36042, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI36042, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI36042, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI36042, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI36042, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI36042, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI36042, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI36042, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI36042, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI36042, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI36042, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI36042, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI36042, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI36042, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI36042, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI36042, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI36042, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI36042, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI36042, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI36042, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI36042, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI36042, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI36042, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI36042, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI36042, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI36042, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI36042, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI36042, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI36042, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI36042, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI36042, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI36042, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI36042, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI36042, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI36042, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI36042, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI36042, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI36042, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI36042, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI36042, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI36042, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI36042, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI36042, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI36042, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI36042, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI36042, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI36042, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI36042, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI36042, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI36042, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI36042, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI36042, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI36042, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI36042, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI36042, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI36042, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI36042, name: "overflowY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI36042, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI36042, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI36042, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI36042, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI36042, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI36042, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI36042, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI36042, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI36042, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI36042, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI36042, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI36042, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI36042, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI36042, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI36042, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI36042, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI36042, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI36042, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI36042, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI36042, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI36042, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI36042, name: "textTransform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI36042, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI36042, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI36042, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI36042, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI36042, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI36006, name: "zIndex", sons: null}]};
NTI62262.node = NNI62262;
NTI62262.base = NTI40208;
NTI62260.base = NTI62262;
var NNI62222 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI62448, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI62450, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI62452, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI36042, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI62220, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI62220, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI62220, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI36042, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI62218, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI36042, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI62220, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI62220, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI36042, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI62260, name: "style", sons: null}]};
NTI62222.node = NNI62222;
var NNI62204 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI62319, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI62323, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI62327, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI62331, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI62335, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI62339, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI62343, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI62347, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI62351, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI62355, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI62359, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI62363, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI62367, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI62371, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI62375, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI62379, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI62383, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI62387, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI62391, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI62395, name: "onunload", sons: null}]};
NTI62204.node = NNI62204;
NTI62204.base = NTI40208;
NTI62222.base = NTI62204;
NTI62230.base = NTI62222;
NTI62228.base = NTI62230;
NTI64057.base = NTI62228;
NTI174327.base = NTI36042;
var NNI40262 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40262.node = NNI40262;
NTI40262.base = NTI40228;
var NNI172074 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36032, name: "Field1", sons: null}]};
NTI172074.node = NNI172074;

function makeNimstrLit(c_53391) {
		  var ln = c_53391.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_53391.charCodeAt(i);
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_54427, src_54428, ti_54429) {
	var result_54619 = null;

		switch (ti_54429.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_54401(ti_54429))) {
			result_54619 = src_54428;
			}
			else {
				result_54619 = [src_54428[0], src_54428[1]];
			}
			
			break;
		case 19:
			      if (dest_54427 === null || dest_54427 === undefined) {
        dest_54427 = {};
      }
      else {
        for (var key in dest_54427) { delete dest_54427[key]; }
      }
      for (var key in src_54428) { dest_54427[key] = src_54428[key]; }
      result_54619 = dest_54427;
    
			break;
		case 18:
		case 17:
			if (!((ti_54429.base == null))) {
			result_54619 = nimCopy(dest_54427, src_54428, ti_54429.base);
			}
			else {
			if ((ti_54429.kind == 17)) {
			result_54619 = (dest_54427 === null || dest_54427 === undefined) ? {m_type: ti_54429} : dest_54427;
			}
			else {
				result_54619 = (dest_54427 === null || dest_54427 === undefined) ? {} : dest_54427;
			}
			}
			nimCopyAux(result_54619, src_54428, ti_54429.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_54428 === null) {
        result_54619 = null;
      }
      else {
        if (dest_54427 === null || dest_54427 === undefined) {
          dest_54427 = new Array(src_54428.length);
        }
        else {
          dest_54427.length = src_54428.length;
        }
        result_54619 = dest_54427;
        for (var i = 0; i < src_54428.length; ++i) {
          result_54619[i] = nimCopy(result_54619[i], src_54428[i], ti_54429.base);
        }
      }
    
			break;
		case 28:
			      if (src_54428 !== null) {
        result_54619 = src_54428.slice(0);
      }
    
			break;
		default: 
			result_54619 = src_54428;
			break;
		}

	return result_54619;

}

function arrayConstr(len_54671, value_54672, typ_54673) {
		    var result = new Array(len_54671);
    for (var i = 0; i < len_54671; ++i) result[i] = nimCopy(null, value_54672, typ_54673);
    return result;
  

	
}

function cstrToNimstr(c_53408) {
		  var ln = c_53408.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_53408.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_53408.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_53425) {
		  if (s_53425 === null) return "";
  var len = s_53425.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_53425[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_53425[i] < 128)
      asciiPart[i] = fcc(s_53425[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_53018, ename_53019) {
		e_53018.name = ename_53019;
		if ((excHandler == 0)) {
		unhandledException(e_53018);
		}
		
		e_53018.trace = nimCopy(null, raw_write_stack_trace_52838(), NTI36040);
		throw e_53018;

	
}

function addInt(a_53803, b_53804) {
		    var result = a_53803 + b_53804;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_54690, a_54691, b_54692) {
			var Tmp1;

	var result_54693 = 0;

	BeforeRet: do {
			if (!(a_54691 <= i_54690)) Tmp1 = false; else {				Tmp1 = (i_54690 <= b_54692);			}		if (Tmp1) {
		result_54693 = i_54690;
		break BeforeRet;
		}
		else {
		raiseIndexError();
		}
		
	} while (false);

	return result_54693;

}

function subInt(a_53821, b_53822) {
		    var result = a_53821 - b_53822;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet2 = setConstr([65, 90]);

function chckRange(i_54709, a_54710, b_54711) {
			var Tmp1;

	var result_54712 = 0;

	BeforeRet: do {
			if (!(a_54710 <= i_54709)) Tmp1 = false; else {				Tmp1 = (i_54709 <= b_54711);			}		if (Tmp1) {
		result_54712 = i_54709;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_54712;

}
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_53839, b_53840) {
		    var result = a_53839 * b_53840;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);

function nimMax(a_54158, b_54159) {
		var Tmp1;

	var result_54160 = 0;

	BeforeRet: do {
		if ((b_54159 <= a_54158)) {
		Tmp1 = a_54158;
		}
		else {
		Tmp1 = b_54159;
		}
		
		result_54160 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_54160;

}

function nimMin(a_54140, b_54141) {
		var Tmp1;

	var result_54142 = 0;

	BeforeRet: do {
		if ((a_54140 <= b_54141)) {
		Tmp1 = a_54140;
		}
		else {
		Tmp1 = b_54141;
		}
		
		result_54142 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_54142;

}
var nim_program_result = 0;
var global_raise_hook_50418 = [null];
var local_raise_hook_50423 = [null];
var out_of_mem_hook_50426 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var dorender_64091 = [null];
var draw_timeout_64092 = [null];
var current_tree_64093 = [null];
var link_counter_64497 = [0];
var radio_counter_64957 = [0];
var alternative_174085 = [null];

function is_fat_pointer_54401(ti_54403) {
	var result_54404 = false;

	BeforeRet: do {
		result_54404 = !((ConstSet1[ti_54403.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_54404;

}

function nimCopyAux(dest_54432, src_54433, n_54435) {
		switch (n_54435.kind) {
		case 0:
			break;
		case 1:
			      dest_54432[n_54435.offset] = nimCopy(dest_54432[n_54435.offset], src_54433[n_54435.offset], n_54435.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_54435.sons.length; i++) {
      nimCopyAux(dest_54432, src_54433, n_54435.sons[i]);
    }
    
			break;
		case 3:
			      dest_54432[n_54435.offset] = nimCopy(dest_54432[n_54435.offset], src_54433[n_54435.offset], n_54435.typ);
      for (var i = 0; i < n_54435.sons.length; ++i) {
        nimCopyAux(dest_54432, src_54433, n_54435.sons[i][1]);
      }
    
			break;
		}

	
}

function add_50438(x_50441, x_50441_Idx, y_50442) {
		      if (x_50441[x_50441_Idx] === null) { x_50441[x_50441_Idx] = []; }
      var off = x_50441[x_50441_Idx].length;
      x_50441[x_50441_Idx].length += y_50442.length;
      for (var i = 0; i < y_50442.length; ++i) {
        x_50441[x_50441_Idx][off+i] = y_50442.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_52536(f_52538) {
					var Tmp3;

	var result_52539 = [null];

		var it_52547 = f_52538;
		var i_52549 = 0;
		var total_52551 = 0;
		var temp_frames_52558 = arrayConstr(64, {Field0: null, Field1: 0}, NTI52541);
		L1: do {
				L2: while (true) {
					if (!!((it_52547 == null))) Tmp3 = false; else {						Tmp3 = (i_52549 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_52558[i_52549].Field0 = it_52547.procname;
					temp_frames_52558[i_52549].Field1 = it_52547.line;
					i_52549 += 1;
					total_52551 += 1;
					it_52547 = it_52547.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_52547 == null))) break L5;
					total_52551 += 1;
					it_52547 = it_52547.prev;
				}
		} while(false);
		result_52539[0] = nimCopy(null, [], NTI36040);
		if (!((total_52551 == i_52549))) {
		if (result_52539[0] != null) { result_52539[0] = (result_52539[0]).concat(makeNimstrLit("(")); } else { result_52539[0] = makeNimstrLit("("); };
		if (result_52539[0] != null) { result_52539[0] = (result_52539[0]).concat(cstrToNimstr(((total_52551 - i_52549))+"")); } else { result_52539[0] = cstrToNimstr(((total_52551 - i_52549))+"").slice(); };
		if (result_52539[0] != null) { result_52539[0] = (result_52539[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_52539[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_52821 = 0;
			var colontmp__174226 = 0;
			colontmp__174226 = (i_52549 - 1);
			var res_174231 = colontmp__174226;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_174231)) break L8;
						j_52821 = res_174231;
						add_50438(result_52539, 0, temp_frames_52558[j_52821].Field0);
						if ((0 < temp_frames_52558[j_52821].Field1)) {
						if (result_52539[0] != null) { result_52539[0] = (result_52539[0]).concat(makeNimstrLit(", line: ")); } else { result_52539[0] = makeNimstrLit(", line: "); };
						if (result_52539[0] != null) { result_52539[0] = (result_52539[0]).concat(cstrToNimstr((temp_frames_52558[j_52821].Field1)+"")); } else { result_52539[0] = cstrToNimstr((temp_frames_52558[j_52821].Field1)+"").slice(); };
						}
						
						if (result_52539[0] != null) { result_52539[0] = (result_52539[0]).concat(makeNimstrLit("\x0A")); } else { result_52539[0] = makeNimstrLit("\x0A"); };
						res_174231 -= 1;
					}
			} while(false);
		} while(false);

	return result_52539[0];

}

function raw_write_stack_trace_52838() {
	var result_52840 = null;

		if (!((framePtr == null))) {
		result_52840 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_52536(framePtr) || []), NTI36040);
		}
		else {
			result_52840 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI36040);
		}
		

	return result_52840;

}

function unhandledException(e_52899) {
		var buf_52900 = [[]];
		if (!(((e_52899.message != null ? e_52899.message.length : 0) == 0))) {
		if (buf_52900[0] != null) { buf_52900[0] = (buf_52900[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_52900[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_52900[0] != null) { buf_52900[0] = (buf_52900[0]).concat(e_52899.message); } else { buf_52900[0] = e_52899.message.slice(); };
		}
		else {
		if (buf_52900[0] != null) { buf_52900[0] = (buf_52900[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_52900[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_52900[0] != null) { buf_52900[0] = (buf_52900[0]).concat(makeNimstrLit(" [")); } else { buf_52900[0] = makeNimstrLit(" ["); };
		add_50438(buf_52900, 0, e_52899.name);
		if (buf_52900[0] != null) { buf_52900[0] = (buf_52900[0]).concat(makeNimstrLit("]\x0A")); } else { buf_52900[0] = makeNimstrLit("]\x0A"); };
		if (buf_52900[0] != null) { buf_52900[0] = (buf_52900[0]).concat(raw_write_stack_trace_52838()); } else { buf_52900[0] = raw_write_stack_trace_52838().slice(); };
		var cbuf_53001 = toJSStr(buf_52900[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_53001);
  }
  else {
    throw cbuf_53001;
  }
  

	
}

function raiseOverflow() {
		var e_53252 = null;
		e_53252 = {m_type: NTI40246, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_53252.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI36040);
		e_53252.parent = null;
		raiseException(e_53252, "OverflowError");

	
}

function is_whitespace_173439(text_173441) {
		     return !/[^\s]/.test(text_173441);
  

	
}

function is_whitespace_173456(x_173458) {
		var Tmp1;
		var Tmp2;

	var result_173459 = false;

	var F={procname:"dochack.isWhitespace",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 102;
		if (!(x_173458.nodeName == "#text")) Tmp2 = false; else {			Tmp2 = is_whitespace_173439(x_173458.textContent);		}		if (Tmp2) Tmp1 = true; else {			Tmp1 = (x_173458.nodeName == "#comment");		}		result_173459 = Tmp1;
	framePtr = F.prev;

	return result_173459;

}

function raiseIndexError() {
		var e_53327 = null;
		e_53327 = {m_type: NTI40258, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_53327.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI36040);
		e_53327.parent = null;
		raiseException(e_53327, "IndexError");

	
}

function to_toc_173473(x_173475, father_173476) {
						var Tmp5;
						var Tmp6;
						var Tmp7;
			var Tmp14;

	var F={procname:"dochack.toToc",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if ((x_173475.nodeName == "UL")) {
		F.line = 107;
		var f_173495 = {heading: null, kids: [], sortId: (father_173476.kids != null ? father_173476.kids.length : 0), doSort: false};
		F.line = 108;
		var i_173497 = 0;
		L1: do {
			F.line = 109;
				L2: while (true) {
				if (!(i_173497 < x_173475.childNodes.length)) break L2;
					F.line = 110;
					var nxt_173498 = addInt(i_173497, 1);
					L3: do {
						F.line = 111;
							L4: while (true) {
							if (!((nxt_173498 < x_173475.childNodes.length) && is_whitespace_173456(x_173475.childNodes[nxt_173498]))) break L4;
								F.line = 112;
								nxt_173498 = addInt(nxt_173498, 1);
							}
					} while(false);
						if (!(nxt_173498 < x_173475.childNodes.length)) Tmp7 = false; else {							Tmp7 = (x_173475.childNodes[i_173497].nodeName == "LI");						}						if (!Tmp7) Tmp6 = false; else {							Tmp6 = (x_173475.childNodes[i_173497].childNodes.length == 1);						}						if (!Tmp6) Tmp5 = false; else {							Tmp5 = (x_173475.childNodes[nxt_173498].nodeName == "UL");						}					if (Tmp5) {
					F.line = 115;
					var e_173523 = {heading: x_173475.childNodes[i_173497].childNodes[0], kids: [], sortId: (f_173495.kids != null ? f_173495.kids.length : 0), doSort: false};
					F.line = 116;
					var it_173524 = x_173475.childNodes[nxt_173498];
					L8: do {
						F.line = 117;
						var j_173532 = 0;
						F.line = 3053;
						var colontmp__174202 = 0;
						F.line = 117;
						colontmp__174202 = it_173524.childNodes.length;
						F.line = 3054;
						var i_174203 = 0;
						L9: do {
							F.line = 3055;
								L10: while (true) {
								if (!(i_174203 < colontmp__174202)) break L10;
									F.line = 117;
									j_173532 = i_174203;
									F.line = 118;
									to_toc_173473(it_173524.childNodes[j_173532], e_173523);
									F.line = 3057;
									i_174203 = addInt(i_174203, 1);
								}
						} while(false);
					} while(false);
					F.line = 119;
					if (f_173495.kids != null) { f_173495.kids.push(e_173523); } else { f_173495.kids = [e_173523]; };
					F.line = 120;
					i_173497 = addInt(nxt_173498, 1);
					}
					else {
						F.line = 122;
						to_toc_173473(x_173475.childNodes[i_173497], f_173495);
						F.line = 123;
						i_173497 = addInt(i_173497, 1);
					}
					
				}
		} while(false);
		F.line = 124;
		if (father_173476.kids != null) { father_173476.kids.push(f_173495); } else { father_173476.kids = [f_173495]; };
		}
		else {
		if (is_whitespace_173456(x_173475)) {
		}
		else {
		if ((x_173475.nodeName == "LI")) {
		F.line = 128;
		var idx_173567 = [];
		L11: do {
			F.line = 129;
			var i_173575 = 0;
			F.line = 3053;
			var colontmp__174207 = 0;
			F.line = 129;
			colontmp__174207 = x_173475.childNodes.length;
			F.line = 3054;
			var i_174208 = 0;
			L12: do {
				F.line = 3055;
					L13: while (true) {
					if (!(i_174208 < colontmp__174207)) break L13;
						F.line = 129;
						i_173575 = i_174208;
						if (!(is_whitespace_173456(x_173475.childNodes[i_173575]))) {
						F.line = 130;
						if (idx_173567 != null) { idx_173567.push(i_173575); } else { idx_173567 = [i_173575]; };
						}
						
						F.line = 3057;
						i_174208 = addInt(i_174208, 1);
					}
			} while(false);
		} while(false);
			if (!((idx_173567 != null ? idx_173567.length : 0) == 2)) Tmp14 = false; else {				Tmp14 = (x_173475.childNodes[idx_173567[chckIndx(1, 0, idx_173567.length+0-1)-0]].nodeName == "UL");			}		if (Tmp14) {
		F.line = 132;
		var e_173606 = {heading: x_173475.childNodes[idx_173567[chckIndx(0, 0, idx_173567.length+0-1)-0]], kids: [], sortId: (father_173476.kids != null ? father_173476.kids.length : 0), doSort: false};
		F.line = 134;
		var it_173607 = x_173475.childNodes[idx_173567[chckIndx(1, 0, idx_173567.length+0-1)-0]];
		L15: do {
			F.line = 135;
			var j_173615 = 0;
			F.line = 3053;
			var colontmp__174213 = 0;
			F.line = 135;
			colontmp__174213 = it_173607.childNodes.length;
			F.line = 3054;
			var i_174214 = 0;
			L16: do {
				F.line = 3055;
					L17: while (true) {
					if (!(i_174214 < colontmp__174213)) break L17;
						F.line = 135;
						j_173615 = i_174214;
						F.line = 136;
						to_toc_173473(it_173607.childNodes[j_173615], e_173606);
						F.line = 3057;
						i_174214 = addInt(i_174214, 1);
					}
			} while(false);
		} while(false);
		F.line = 137;
		if (father_173476.kids != null) { father_173476.kids.push(e_173606); } else { father_173476.kids = [e_173606]; };
		}
		else {
			L18: do {
				F.line = 139;
				var i_173630 = 0;
				F.line = 3053;
				var colontmp__174218 = 0;
				F.line = 139;
				colontmp__174218 = x_173475.childNodes.length;
				F.line = 3054;
				var i_174219 = 0;
				L19: do {
					F.line = 3055;
						L20: while (true) {
						if (!(i_174219 < colontmp__174218)) break L20;
							F.line = 139;
							i_173630 = i_174219;
							F.line = 140;
							to_toc_173473(x_173475.childNodes[i_173630], father_173476);
							F.line = 3057;
							i_174219 = addInt(i_174219, 1);
						}
				} while(false);
			} while(false);
		}
		
		}
		else {
			F.line = 142;
		if (father_173476.kids != null) { father_173476.kids.push({heading: x_173475, kids: [], sortId: (father_173476.kids != null ? father_173476.kids.length : 0), doSort: false}); } else { father_173476.kids = [{heading: x_173475, kids: [], sortId: (father_173476.kids != null ? father_173476.kids.length : 0), doSort: false}]; };
		}
		}}
	framePtr = F.prev;

	
}

function extract_items_173163(x_173165, heading_173166, items_173169, items_173169_Idx) {
			var Tmp1;

	var F={procname:"dochack.extractItems",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((x_173165 == null)) {
		F.line = 49;
		break BeforeRet;
		}
		
			if (!!((x_173165.heading == null))) Tmp1 = false; else {				Tmp1 = (x_173165.heading.textContent == heading_173166);			}		if (Tmp1) {
		L2: do {
			F.line = 51;
			var i_173198 = 0;
			F.line = 3053;
			var colontmp__174237 = 0;
			F.line = 51;
			colontmp__174237 = (x_173165.kids != null ? x_173165.kids.length : 0);
			F.line = 3054;
			var i_174238 = 0;
			L3: do {
				F.line = 3055;
					L4: while (true) {
					if (!(i_174238 < colontmp__174237)) break L4;
						F.line = 51;
						i_173198 = i_174238;
						F.line = 52;
						if (items_173169[items_173169_Idx] != null) { items_173169[items_173169_Idx].push(x_173165.kids[chckIndx(i_173198, 0, x_173165.kids.length+0-1)-0].heading); } else { items_173169[items_173169_Idx] = [x_173165.kids[chckIndx(i_173198, 0, x_173165.kids.length+0-1)-0].heading]; };
						F.line = 3057;
						i_174238 = addInt(i_174238, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			L5: do {
				F.line = 54;
				var i_173218 = 0;
				F.line = 3053;
				var colontmp__174242 = 0;
				F.line = 54;
				colontmp__174242 = (x_173165.kids != null ? x_173165.kids.length : 0);
				F.line = 3054;
				var i_174243 = 0;
				L6: do {
					F.line = 3055;
						L7: while (true) {
						if (!(i_174243 < colontmp__174242)) break L7;
							F.line = 54;
							i_173218 = i_174243;
							F.line = 55;
							var it_173219 = x_173165.kids[chckIndx(i_173218, 0, x_173165.kids.length+0-1)-0];
							F.line = 56;
							extract_items_173163(it_173219, heading_173166, items_173169, items_173169_Idx);
							F.line = 3057;
							i_174243 = addInt(i_174243, 1);
						}
				} while(false);
			} while(false);
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function tree_64318(tag_64320, kids_64322) {
	var result_64323 = null;

	var F={procname:"karax.tree",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 103;
		result_64323 = document.createElement(toJSStr(tag_64320));
		L1: do {
			F.line = 104;
			var k_64354 = null;
			F.line = 2307;
			var i_174260 = 0;
			L2: do {
				F.line = 2308;
					L3: while (true) {
					if (!(i_174260 < (kids_64322 != null ? kids_64322.length : 0))) break L3;
						F.line = 104;
						k_64354 = kids_64322[chckIndx(i_174260, 0, kids_64322.length+0-1)-0];
						F.line = 105;
						result_64323.appendChild(k_64354);
						F.line = 2310;
						i_174260 = addInt(i_174260, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_64323;

}

function text_64438(s_64440) {
	var result_64441 = null;

	var F={procname:"karax.text",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 113;
		result_64441 = document.createTextNode(s_64440);
	framePtr = F.prev;

	return result_64441;

}

function set_attr_65221(e_65223, key_65224, value_65225) {
	var F={procname:"karax.setAttr",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 273;
		e_65223.setAttribute(key_65224, value_65225);
	framePtr = F.prev;

	
}

function sys_fatal_57436(message_57440) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3013;
		var e_57442 = null;
		F.line = 3014;
		e_57442 = {m_type: NTI40250, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 3015;
		e_57442.message = nimCopy(null, message_57440, NTI36040);
		F.line = 3016;
		raiseException(e_57442, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_57432(msg_57434) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3982;
		sys_fatal_57436(msg_57434);
	framePtr = F.prev;

	
}

function failed_assert_impl_57475(msg_57477) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3989;
		raise_assert_57432(msg_57477);
	framePtr = F.prev;

	
}

function uncovered_173725(x_173727) {
			var Tmp1;
		var Tmp2;

	var result_173728 = null;

	var F={procname:"dochack.uncovered",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
			if (!((x_173727.kids != null ? x_173727.kids.length : 0) == 0)) Tmp1 = false; else {				Tmp1 = !((x_173727.heading == null));			}		if (Tmp1) {
		F.line = 162;
		if (!(x_173727.heading.hasOwnProperty('__karaxMarker__'))) {
		Tmp2 = x_173727;
		}
		else {
		Tmp2 = null;
		}
		
		result_173728 = Tmp2;
		break BeforeRet;
		}
		
		F.line = 163;
		result_173728 = {heading: x_173727.heading, kids: [], sortId: x_173727.sortId, doSort: x_173727.doSort};
		L3: do {
			F.line = 165;
			var i_173767 = 0;
			F.line = 3053;
			var colontmp__174272 = 0;
			F.line = 165;
			colontmp__174272 = (x_173727.kids != null ? x_173727.kids.length : 0);
			F.line = 3054;
			var i_174273 = 0;
			L4: do {
				F.line = 3055;
					L5: while (true) {
					if (!(i_174273 < colontmp__174272)) break L5;
						F.line = 165;
						i_173767 = i_174273;
						F.line = 166;
						var y_173768 = uncovered_173725(x_173727.kids[chckIndx(i_173767, 0, x_173727.kids.length+0-1)-0]);
						if (!((y_173768 == null))) {
						F.line = 167;
						if (result_173728.kids != null) { result_173728.kids.push(y_173768); } else { result_173728.kids = [y_173768]; };
						}
						
						F.line = 3057;
						i_174273 = addInt(i_174273, 1);
					}
			} while(false);
		} while(false);
		if (((result_173728.kids != null ? result_173728.kids.length : 0) == 0)) {
		F.line = 168;
		result_173728 = null;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_173728;

}

function merge_tocs_173802(orig_173804, news_173805) {
	var result_173806 = null;

	var F={procname:"dochack.mergeTocs",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 171;
		result_173806 = uncovered_173725(orig_173804);
		if ((result_173806 == null)) {
		F.line = 173;
		result_173806 = news_173805;
		}
		else {
			L1: do {
				F.line = 175;
				var i_173827 = 0;
				F.line = 3053;
				var colontmp__174266 = 0;
				F.line = 175;
				colontmp__174266 = (news_173805.kids != null ? news_173805.kids.length : 0);
				F.line = 3054;
				var i_174267 = 0;
				L2: do {
					F.line = 3055;
						L3: while (true) {
						if (!(i_174267 < colontmp__174266)) break L3;
							F.line = 175;
							i_173827 = i_174267;
							F.line = 176;
							if (result_173806.kids != null) { result_173806.kids.push(news_173805.kids[chckIndx(i_173827, 0, news_173805.kids.length+0-1)-0]); } else { result_173806.kids = [news_173805.kids[chckIndx(i_173827, 0, news_173805.kids.length+0-1)-0]]; };
							F.line = 3057;
							i_174267 = addInt(i_174267, 1);
						}
				} while(false);
			} while(false);
		}
		
	framePtr = F.prev;

	return result_173806;

}

function build_toc_173848(orig_173850, types_173852, procs_173853) {
	var result_173854 = null;

	var F={procname:"dochack.buildToc",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 179;
		var new_stuff_173868 = {heading: null, kids: [], doSort: true, sortId: 0};
		L1: do {
			F.line = 180;
			var t_174014 = null;
			F.line = 4021;
			var i_174255 = 0;
			F.line = 4022;
			var l_174256 = (types_173852 != null ? types_173852.length : 0);
			L2: do {
				F.line = 4023;
					L3: while (true) {
					if (!(i_174255 < l_174256)) break L3;
						F.line = 180;
						t_174014 = types_173852[chckIndx(i_174255, 0, types_173852.length+0-1)-0];
						F.line = 181;
						var c_174028 = {heading: t_174014.cloneNode(true), kids: [], doSort: true, sortId: 0};
						F.line = 182;
						t_174014.__karaxMarker__ = true;
						L4: do {
							F.line = 183;
							var p_174035 = null;
							F.line = 4021;
							var i_174252 = 0;
							F.line = 4022;
							var l_174253 = (procs_173853 != null ? procs_173853.length : 0);
							L5: do {
								F.line = 4023;
									L6: while (true) {
									if (!(i_174252 < l_174253)) break L6;
										F.line = 183;
										p_174035 = procs_173853[chckIndx(i_174252, 0, procs_173853.length+0-1)-0];
										if (!(p_174035.hasOwnProperty('__karaxMarker__'))) {
										F.line = 185;
										var xx_174036 = p_174035.parentNode.getElementsByClassName("attachedType");
										if ((((xx_174036 != null ? xx_174036.length : 0) == 1) && (xx_174036[chckIndx(0, 0, xx_174036.length+0-1)-0].textContent == t_174014.textContent))) {
										F.line = 188;
										var q_174044 = tree_64318(makeNimstrLit("A"), [text_64438(p_174035.title)]);
										F.line = 189;
										set_attr_65221(q_174044, "href", p_174035.getAttribute("href"));
										F.line = 190;
										if (c_174028.kids != null) { c_174028.kids.push({heading: q_174044, kids: [], sortId: 0, doSort: false}); } else { c_174028.kids = [{heading: q_174044, kids: [], sortId: 0, doSort: false}]; };
										F.line = 191;
										p_174035.__karaxMarker__ = true;
										}
										
										}
										
										F.line = 4025;
										i_174252 = addInt(i_174252, 1);
										if (!(((procs_173853 != null ? procs_173853.length : 0) == l_174253))) {
										F.line = 4026;
										failed_assert_impl_57475(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(4026, 11) `len(a) == L` seq modified while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 192;
						if (new_stuff_173868.kids != null) { new_stuff_173868.kids.push(c_174028); } else { new_stuff_173868.kids = [c_174028]; };
						F.line = 4025;
						i_174255 = addInt(i_174255, 1);
						if (!(((types_173852 != null ? types_173852.length : 0) == l_174256))) {
						F.line = 4026;
						failed_assert_impl_57475(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(4026, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 193;
		result_173854 = merge_tocs_173802(orig_173850, new_stuff_173868);
	framePtr = F.prev;

	return result_173854;

}

function add_64455(parent_64457, kid_64458) {
			var Tmp1;
				var Tmp2;

	var F={procname:"karax.add",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
			if (!(parent_64457.nodeName == "TR")) Tmp1 = false; else {				if ((kid_64458.nodeName == "TD")) Tmp2 = true; else {					Tmp2 = (kid_64458.nodeName == "TH");				}				Tmp1 = Tmp2;			}		if (Tmp1) {
		F.line = 117;
		var k_64459 = document.createElement("TD");
		F.line = 118;
		k_64459.appendChild(kid_64458);
		F.line = 119;
		parent_64457.appendChild(k_64459);
		}
		else {
			F.line = 121;
		parent_64457.appendChild(kid_64458);
		}
		
	framePtr = F.prev;

	
}

function set_class_65204(e_65206, value_65207) {
	var F={procname:"karax.setClass",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 270;
		e_65206.setAttribute("class", toJSStr(value_65207));
	framePtr = F.prev;

	
}

function to_html_173233(x_173235, is_root_173236) {
			var Tmp1;

		function HEX3Aanonymous_173276(a_173278, b_173279) {
					var Tmp1;

			var result_173280 = 0;

			var F={procname:"toHtml.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
			BeforeRet: do {
					if (!!((a_173278.heading == null))) Tmp1 = false; else {						Tmp1 = !((b_173279.heading == null));					}				if (Tmp1) {
				F.line = 74;
				var x_173297 = a_173278.heading.textContent;
				F.line = 75;
				var y_173298 = b_173279.heading.textContent;
				if ((x_173297 < y_173298)) {
				F.line = 76;
				result_173280 = -1;
				break BeforeRet;
				}
				
				if ((y_173298 < x_173297)) {
				F.line = 77;
				result_173280 = 1;
				break BeforeRet;
				}
				
				F.line = 78;
				result_173280 = 0;
				break BeforeRet;
				}
				else {
					F.line = 81;
					result_173280 = subInt(a_173278.sortId, b_173279.sortId);
					break BeforeRet;
				}
				
			} while (false);
			framePtr = F.prev;

			return result_173280;

		}

	var result_173237 = null;

	var F={procname:"dochack.toHtml",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((x_173235 == null)) {
		F.line = 59;
		result_173237 = null;
		break BeforeRet;
		}
		
		if (((x_173235.kids != null ? x_173235.kids.length : 0) == 0)) {
		if ((x_173235.heading == null)) {
		F.line = 61;
		result_173237 = null;
		break BeforeRet;
		}
		
		F.line = 62;
		result_173237 = x_173235.heading.cloneNode(true);
		break BeforeRet;
		}
		
		F.line = 63;
		result_173237 = tree_64318(makeNimstrLit("DIV"), []);
			if (!!((x_173235.heading == null))) Tmp1 = false; else {				Tmp1 = !(x_173235.heading.hasOwnProperty('__karaxMarker__'));			}		if (Tmp1) {
		F.line = 65;
		add_64455(result_173237, x_173235.heading.cloneNode(true));
		}
		
		F.line = 66;
		var ul_173273 = tree_64318(makeNimstrLit("UL"), []);
		if (is_root_173236) {
		F.line = 68;
		set_class_65204(ul_173273, makeNimstrLit("simple simple-toc"));
		}
		else {
			F.line = 70;
		set_class_65204(ul_173273, makeNimstrLit("simple"));
		}
		
		if (x_173235.doSort) {
		F.line = 72;
		x_173235.kids.sort(HEX3Aanonymous_173276);
		}
		
		L2: do {
			F.line = 83;
			var k_173414 = null;
			F.line = 4019;
			var colontmp__174279 = null;
			F.line = 83;
			colontmp__174279 = x_173235.kids;
			F.line = 4021;
			var i_174281 = 0;
			F.line = 4022;
			var l_174282 = (colontmp__174279 != null ? colontmp__174279.length : 0);
			L3: do {
				F.line = 4023;
					L4: while (true) {
					if (!(i_174281 < l_174282)) break L4;
						F.line = 83;
						k_173414 = colontmp__174279[chckIndx(i_174281, 0, colontmp__174279.length+0-1)-0];
						F.line = 84;
						var y_173415 = to_html_173233(k_173414, false);
						if (!((y_173415 == null))) {
						F.line = 86;
						add_64455(ul_173273, tree_64318(makeNimstrLit("LI"), [y_173415]));
						}
						
						F.line = 4025;
						i_174281 = addInt(i_174281, 1);
						if (!(((colontmp__174279 != null ? colontmp__174279.length : 0) == l_174282))) {
						F.line = 4026;
						failed_assert_impl_57475(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(4026, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		if (!((ul_173273.childNodes.length == 0))) {
		F.line = 87;
		add_64455(result_173237, ul_173273);
		}
		
		if ((result_173237.childNodes.length == 0)) {
		F.line = 88;
		result_173237 = null;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_173237;

}

function replace_by_id_64161(id_64163, new_tree_64164) {
	var F={procname:"karax.replaceById",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 54;
		var x_64165 = document.getElementById(id_64163);
		F.line = 55;
		x_64165.parentNode.replaceChild(new_tree_64164, x_64165);
		F.line = 56;
		new_tree_64164.id = id_64163;
	framePtr = F.prev;

	
}

function togglevis_174099(d_174101) {
	var F={procname:"dochack.togglevis",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 198;
		    if (d_174101.style.display == 'none')
      d_174101.style.display = 'inline';
    else
      d_174101.style.display = 'none';
  
	framePtr = F.prev;

	
}

function groupBy(value_174117) {
	var F={procname:"dochack.groupBy",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 206;
		var toc_174118 = document.getElementById("toc-list");
		if ((alternative_174085[0] == null)) {
		F.line = 208;
		var tt_174137 = {heading: null, kids: [], sortId: 0, doSort: false};
		F.line = 209;
		to_toc_173473(toc_174118, tt_174137);
		F.line = 210;
		tt_174137 = tt_174137.kids[chckIndx(0, 0, tt_174137.kids.length+0-1)-0];
		F.line = 212;
		var types_174152 = [[]];
		F.line = 213;
		var procs_174167 = [[]];
		F.line = 215;
		extract_items_173163(tt_174137, "Types", types_174152, 0);
		F.line = 216;
		extract_items_173163(tt_174137, "Procs", procs_174167, 0);
		F.line = 217;
		extract_items_173163(tt_174137, "Converters", procs_174167, 0);
		F.line = 218;
		extract_items_173163(tt_174137, "Methods", procs_174167, 0);
		F.line = 219;
		extract_items_173163(tt_174137, "Templates", procs_174167, 0);
		F.line = 220;
		extract_items_173163(tt_174137, "Macros", procs_174167, 0);
		F.line = 221;
		extract_items_173163(tt_174137, "Iterators", procs_174167, 0);
		F.line = 223;
		var ntoc_174175 = build_toc_173848(tt_174137, types_174152[0], procs_174167[0]);
		F.line = 224;
		var x_174176 = to_html_173233(ntoc_174175, true);
		F.line = 225;
		alternative_174085[0] = tree_64318(makeNimstrLit("DIV"), [x_174176]);
		}
		
		if ((value_174117 == "type")) {
		F.line = 227;
		replace_by_id_64161("tocRoot", alternative_174085[0]);
		}
		else {
			F.line = 229;
		replace_by_id_64161("tocRoot", tree_64318(makeNimstrLit("DIV"), []));
		}
		
		F.line = 230;
		togglevis_174099(document.getElementById("toc-list"));
	framePtr = F.prev;

	
}
var db_174285 = [null];
var contents_174287 = [null];
var oldtoc_174464 = [null];
var timer_174465 = [null];

function raiseRangeError() {
		var e_53302 = null;
		e_53302 = {m_type: NTI40262, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_53302.message = nimCopy(null, makeNimstrLit("value out of range"), NTI36040);
		e_53302.parent = null;
		raiseException(e_53302, "RangeError");

	
}

function nsuToLowerAsciiChar(c_163980) {
	var result_163981 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"../../lib/pure/strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet2[c_163980] != undefined)) {
		F.line = 222;
		result_163981 = chckRange(addInt(c_163980, 32), 0, 255);
		}
		else {
			F.line = 224;
			result_163981 = c_163980;
		}
		
	framePtr = F.prev;

	return result_163981;

}

function fuzzy_match_172070(pattern_172072, str_172073) {
							var Tmp4;
							var Tmp5;
								var Tmp6;

	var result_172077 = {Field0: 0, Field1: false};

	var F={procname:"fuzzysearch.fuzzyMatch",prev:framePtr,filename:"fuzzysearch.nim",line:0};
	framePtr = F;
		F.line = 37;
		var score_state_172078 = -100;
		F.line = 38;
		var header_matched_172079 = false;
		F.line = 39;
		var unmatched_leading_char_count_172081 = 0;
		F.line = 40;
		var consecutive_match_count_172083 = 0;
		F.line = 41;
		var str_index_172085 = 0;
		F.line = 42;
		var pat_index_172087 = 0;
		F.line = 43;
		var score_172089 = 0;
		L1: do {
			F.line = 49;
				L2: while (true) {
				if (!((str_index_172085 < (str_172073 != null ? str_172073.length : 0)) && (pat_index_172087 < (pattern_172072 != null ? pattern_172072.length : 0)))) break L2;
					L3: do {
						F.line = 51;
						var pattern_char_172096 = nsuToLowerAsciiChar(pattern_172072.charCodeAt(chckIndx(pat_index_172087, 0, pattern_172072.length+0-1)-0));
						F.line = 52;
						var str_char_172097 = nsuToLowerAsciiChar(str_172073.charCodeAt(chckIndx(str_index_172085, 0, str_172073.length+0-1)-0));
						if ((ConstSet3[pattern_char_172096] != undefined)) {
						F.line = 56;
						pat_index_172087 = addInt(pat_index_172087, 1);
						F.line = 57;
						break L3;
						}
						
						if ((ConstSet4[str_char_172097] != undefined)) {
						F.line = 59;
						str_index_172085 = addInt(str_index_172085, 1);
						F.line = 60;
						break L3;
						}
						
						if ((!(header_matched_172079) && (str_char_172097 == 58))) {
						F.line = 65;
						header_matched_172079 = true;
						F.line = 66;
						score_state_172078 = -100;
						F.line = 67;
						score_172089 = Math.trunc(Math.floor((5.0000000000000000e-01 * score_172089)));
						F.line = 68;
						pat_index_172087 = 0;
						F.line = 69;
						str_index_172085 = addInt(str_index_172085, 1);
						F.line = 70;
						break L3;
						}
						
						if ((str_char_172097 == pattern_char_172096)) {
						F.line = 73;
						switch (score_state_172078) {
						case -100:
						case 20:
							F.line = 75;
							score_state_172078 = 10;
							break;
						case 0:
							F.line = 78;
							score_state_172078 = 5;
							F.line = 78;
							score_172089 = addInt(score_172089, score_state_172078);
							break;
						case 10:
						case 5:
							F.line = 81;
							consecutive_match_count_172083 = addInt(consecutive_match_count_172083, 1);
							F.line = 82;
							score_state_172078 = 5;
							F.line = 83;
							score_172089 = addInt(score_172089, mulInt(5, consecutive_match_count_172083));
							if ((score_state_172078 == 10)) {
							F.line = 86;
							score_172089 = addInt(score_172089, 10);
							}
							
							F.line = 88;
							var on_boundary_172172 = (pat_index_172087 == (pattern_172072 != null ? (pattern_172072.length-1) : -1));
							if ((!(on_boundary_172172) && (str_index_172085 < (str_172073 != null ? (str_172073.length-1) : -1)))) {
							F.line = 91;
							var next_pattern_char_172173 = nsuToLowerAsciiChar(pattern_172072.charCodeAt(chckIndx(addInt(pat_index_172087, 1), 0, pattern_172072.length+0-1)-0));
							F.line = 92;
							var next_str_char_172174 = nsuToLowerAsciiChar(str_172073.charCodeAt(chckIndx(addInt(str_index_172085, 1), 0, str_172073.length+0-1)-0));
							F.line = 95;
							if (!!((ConstSet5[next_str_char_172174] != undefined))) Tmp4 = false; else {								Tmp4 = !((next_str_char_172174 == next_pattern_char_172173));							}							on_boundary_172172 = Tmp4;
							}
							
							if (on_boundary_172172) {
							F.line = 100;
							score_state_172078 = 20;
							F.line = 100;
							score_172089 = addInt(score_172089, score_state_172078);
							}
							
							break;
						case -1:
						case -3:
							F.line = 103;
							if (!((ConstSet6[str_172073.charCodeAt(chckIndx(subInt(str_index_172085, 1), 0, str_172073.length+0-1)-0)] != undefined))) Tmp5 = true; else {								if (!(ConstSet7[str_172073.charCodeAt(chckIndx(subInt(str_index_172085, 1), 0, str_172073.length+0-1)-0)] != undefined)) Tmp6 = false; else {									Tmp6 = (ConstSet8[str_172073.charCodeAt(chckIndx(str_index_172085, 0, str_172073.length+0-1)-0)] != undefined);								}								Tmp5 = Tmp6;							}							var is_leading_char_172212 = Tmp5;
							if (is_leading_char_172212) {
							F.line = 110;
							score_state_172078 = 10;
							}
							else {
								F.line = 114;
								score_state_172078 = 0;
								F.line = 114;
								score_172089 = addInt(score_172089, score_state_172078);
							}
							
							break;
						}
						F.line = 115;
						pat_index_172087 = addInt(pat_index_172087, 1);
						}
						else {
							F.line = 118;
							switch (score_state_172078) {
							case -100:
								F.line = 120;
								score_state_172078 = -3;
								F.line = 120;
								score_172089 = addInt(score_172089, score_state_172078);
								break;
							case 5:
								F.line = 123;
								score_state_172078 = -1;
								F.line = 123;
								score_172089 = addInt(score_172089, score_state_172078);
								F.line = 124;
								consecutive_match_count_172083 = 0;
								break;
							case -3:
								if ((unmatched_leading_char_count_172081 < 3)) {
								F.line = 128;
								score_state_172078 = -3;
								F.line = 128;
								score_172089 = addInt(score_172089, score_state_172078);
								}
								
								F.line = 129;
								unmatched_leading_char_count_172081 = addInt(unmatched_leading_char_count_172081, 1);
								break;
							default: 
								F.line = 132;
								score_state_172078 = -1;
								F.line = 132;
								score_172089 = addInt(score_172089, score_state_172078);
								break;
							}
						}
						
						F.line = 134;
						str_index_172085 = addInt(str_index_172085, 1);
					} while(false);
				}
		} while(false);
		F.line = 136;
		nimCopy(result_172077, {Field0: nimMax(0, score_172089), Field1: (0 < score_172089)}, NTI172074);
	framePtr = F.prev;

	return result_172077;

}

function text_64421(s_64423) {
	var result_64424 = null;

	var F={procname:"karax.text",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 112;
		result_64424 = document.createTextNode(toJSStr(s_64423));
	framePtr = F.prev;

	return result_64424;

}

function dosearch_174305(value_174307) {

		function HEX3Aanonymous_174391(a_174400, b_174401) {
			var result_174405 = 0;

			var F={procname:"dosearch.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
				F.line = 274;
				result_174405 = subInt(b_174401["Field1"], a_174400["Field1"]);
			framePtr = F.prev;

			return result_174405;

		}

	var result_174308 = null;

	var F={procname:"dochack.dosearch",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if (((db_174285[0] != null ? db_174285[0].length : 0) == 0)) {
		F.line = 240;
		var stuff_174314 = null;
		F.line = 241;
		    var request = new XMLHttpRequest();
    request.open("GET", "theindex.html", false);
    request.send(null);

    var doc = document.implementation.createHTMLDocument("theindex");
    doc.documentElement.innerHTML = request.responseText;

    //parser=new DOMParser();
    //doc=parser.parseFromString("<html></html>", "text/html");

    stuff_174314 = doc.documentElement;
    
		F.line = 254;
		db_174285[0] = nimCopy(null, stuff_174314.getElementsByClassName("reference"), NTI64057);
		F.line = 255;
		contents_174287[0] = nimCopy(null, [], NTI174327);
		L1: do {
			F.line = 256;
			var ahref_174334 = null;
			F.line = 4021;
			var i_174532 = 0;
			F.line = 4022;
			var l_174533 = (db_174285[0] != null ? db_174285[0].length : 0);
			L2: do {
				F.line = 4023;
					L3: while (true) {
					if (!(i_174532 < l_174533)) break L3;
						F.line = 256;
						ahref_174334 = db_174285[0][chckIndx(i_174532, 0, db_174285[0].length+0-1)-0];
						F.line = 257;
						if (contents_174287[0] != null) { contents_174287[0].push(ahref_174334.getAttribute("data-doc-search-tag")); } else { contents_174287[0] = [ahref_174334.getAttribute("data-doc-search-tag")]; };
						F.line = 4025;
						i_174532 = addInt(i_174532, 1);
						if (!(((db_174285[0] != null ? db_174285[0].length : 0) == l_174533))) {
						F.line = 4026;
						failed_assert_impl_57475(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(4026, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		}
		
		F.line = 258;
		var ul_174345 = tree_64318(makeNimstrLit("UL"), []);
		F.line = 259;
		result_174308 = tree_64318(makeNimstrLit("DIV"), []);
		F.line = 260;
		set_class_65204(result_174308, makeNimstrLit("search_results"));
		F.line = 261;
		var matches_174364 = [];
		L4: do {
			F.line = 262;
			var i_174377 = 0;
			F.line = 3053;
			var colontmp__174539 = 0;
			F.line = 262;
			colontmp__174539 = (db_174285[0] != null ? db_174285[0].length : 0);
			F.line = 3054;
			var i_174540 = 0;
			L5: do {
				F.line = 3055;
					L6: while (true) {
					if (!(i_174540 < colontmp__174539)) break L6;
						F.line = 262;
						i_174377 = i_174540;
						L7: do {
							F.line = 263;
							var c_174378 = contents_174287[0][chckIndx(i_174377, 0, contents_174287[0].length+0-1)-0];
							if (((c_174378 == "Examples") || (c_174378 == "PEG construction"))) {
							F.line = 268;
							break L7;
							}
							
							F.line = 269;
							var colontmp__174548 = {Field0: 0, Field1: false};
							F.line = 269;
							var score_174379 = 0;
							F.line = 269;
							var matched_174380 = false;
							F.line = 269;
							nimCopy(colontmp__174548, fuzzy_match_172070(value_174307, c_174378), NTI172074);
							F.line = 269;
							score_174379 = colontmp__174548["Field0"];
							F.line = 269;
							matched_174380 = colontmp__174548["Field1"];
							if (matched_174380) {
							F.line = 271;
							if (matches_174364 != null) { matches_174364.push({Field0: db_174285[0][chckIndx(i_174377, 0, db_174285[0].length+0-1)-0], Field1: score_174379}); } else { matches_174364 = [{Field0: db_174285[0][chckIndx(i_174377, 0, db_174285[0].length+0-1)-0], Field1: score_174379}]; };
							}
							
						} while(false);
						F.line = 3057;
						i_174540 = addInt(i_174540, 1);
					}
			} while(false);
		} while(false);
		F.line = 273;
		matches_174364.sort(HEX3Aanonymous_174391);
		L8: do {
			F.line = 275;
			var i_174444 = 0;
			F.line = 3053;
			var colontmp__174544 = 0;
			F.line = 275;
			colontmp__174544 = nimMin((matches_174364 != null ? matches_174364.length : 0), 19);
			F.line = 3054;
			var i_174545 = 0;
			L9: do {
				F.line = 3055;
					L10: while (true) {
					if (!(i_174545 < colontmp__174544)) break L10;
						F.line = 275;
						i_174444 = i_174545;
						F.line = 276;
						matches_174364[chckIndx(i_174444, 0, matches_174364.length+0-1)-0]["Field0"].innerHTML = matches_174364[chckIndx(i_174444, 0, matches_174364.length+0-1)-0]["Field0"].getAttribute("data-doc-search-tag");
						F.line = 277;
						add_64455(ul_174345, tree_64318(makeNimstrLit("LI"), [matches_174364[chckIndx(i_174444, 0, matches_174364.length+0-1)-0]["Field0"]]));
						F.line = 3057;
						i_174545 = addInt(i_174545, 1);
					}
			} while(false);
		} while(false);
		if ((ul_174345.childNodes.length == 0)) {
		F.line = 279;
		add_64455(result_174308, tree_64318(makeNimstrLit("B"), [text_64421(makeNimstrLit("no search results"))]));
		}
		else {
			F.line = 281;
			add_64455(result_174308, tree_64318(makeNimstrLit("B"), [text_64421(makeNimstrLit("search results"))]));
			F.line = 282;
			add_64455(result_174308, ul_174345);
		}
		
	framePtr = F.prev;

	return result_174308;

}

function search() {

		function wrapper_174481() {
			var F={procname:"search.wrapper",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
				F.line = 289;
				var elem_174483 = document.getElementById("searchInput");
				F.line = 290;
				var value_174484 = elem_174483.value;
				if (!(((value_174484 != null ? value_174484.length : 0) == 0))) {
				if ((oldtoc_174464[0] == null)) {
				F.line = 293;
				oldtoc_174464[0] = document.getElementById("tocRoot");
				}
				
				F.line = 294;
				var results_174490 = dosearch_174305(value_174484);
				F.line = 295;
				replace_by_id_64161("tocRoot", results_174490);
				}
				else {
				if (!((oldtoc_174464[0] == null))) {
				F.line = 297;
				replace_by_id_64161("tocRoot", oldtoc_174464[0]);
				}
				}
			framePtr = F.prev;

			
		}

	var F={procname:"dochack.search",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if (!((timer_174465[0] == null))) {
		F.line = 299;
		clearTimeout(timer_174465[0]);
		}
		
		F.line = 300;
		timer_174465[0] = setTimeout(wrapper_174481, 400);
	framePtr = F.prev;

	
}
